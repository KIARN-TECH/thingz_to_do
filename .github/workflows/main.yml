name: Release Statically Linked Rust Binary

on:
  push:
    tags:
      - 'v*'  # Trigger on tags like 'v1.0.'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl       # Linux (musl)
          - aarch64-unknown-linux-musl      # ARM Linux (musl)
          - x86_64-pc-windows-gnu           # Windows (GNU) Instead of other version

    env:
      BINARY_NAME: thingz_to_do

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Cargo registry and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Cross
        run: cargo install cross

      - name: Install Target for Cross Compilation
        run: rustup target add ${{ matrix.target }}

      - name: Build with Cross
        run: cross build --target ${{ matrix.target }} --release --verbose

      - name: Debug File Paths
        run: |
          # Debugging: List the files to verify that the executable exists
          ls -la target/${{ matrix.target }}/release/

      - name: Create Release Archive
        run: |
          mkdir -p release

          case "${{ matrix.target }}" in
            *windows*)
              cp target/${{ matrix.target }}/release/${BINARY_NAME}.exe release/
              zip -r ${BINARY_NAME}_${{ matrix.target }}.zip release
              ;;
            *darwin*)
              cp target/${{ matrix.target }}/release/${BINARY_NAME} release/
              tar -czvf ${BINARY_NAME}_${{ matrix.target }}.tar.gz -C release ${BINARY_NAME}
              ;;
            *)
              cp target/${{ matrix.target }}/release/${BINARY_NAME} release/
              tar -czvf ${BINARY_NAME}_${{ matrix.target }}.tar.gz -C release ${BINARY_NAME}
              ;;
          esac

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.tar.gz
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.TTD }}

      - name: Upload Build Artifacts (Optional)
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/${{ matrix.target }}/release/
