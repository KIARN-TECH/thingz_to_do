name: Release Statically Linked Rust Binary

on:
  push:
    tags:
      - 'v*'  # Trigger on tags like 'v1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl       # Linux (musl)
          - aarch64-unknown-linux-musl      # ARM Linux (musl)
          - x86_64-pc-windows-gnu           # Windows (GNU) See whether it works

    env:
      BINARY_NAME: thingz_to_do

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Cross
        run: cargo install cross

      - name: Install Target for Cross Compilation
        run: rustup target add ${{ matrix.target }}

      - name: Build with Cross
        run: cross build --target ${{ matrix.target }} --release --verbose

      - name: Debug File Paths
        run: |
          # Debugging: List the files to verify that the executable exists
          ls -la target/${{ matrix.target }}/release/

      - name: Create Release Archive
        run: |
          mkdir -p release

          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            # For Windows (GNU), use proper Bash syntax for variable expansion
            cp target/${{ matrix.target }}/release/${BINARY_NAME}.exe release/
            zip -r ${BINARY_NAME}_${{ matrix.target }}.zip release
          elif [[ "${{ matrix.target }}" == *"darwin"* ]]; then
            # For macOS targets, tar and gzipped
            cp target/${{ matrix.target }}/release/${BINARY_NAME} release/
            tar -czvf ${BINARY_NAME}_${{ matrix.target }}.tar.gz -C release ${BINARY_NAME}
          else
            # For Linux targets, tar and gzipped
            cp target/${{ matrix.target }}/release/${BINARY_NAME} release/
            tar -czvf ${BINARY_NAME}_${{ matrix.target }}.tar.gz -C release ${BINARY_NAME}
          fi

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.tar.gz
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.SSA }}